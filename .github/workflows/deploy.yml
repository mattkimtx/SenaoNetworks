# Workflow to deploy code to AWS EC2 instance
name: Deploy to AWS EC2

on:
  push:
    branches:
      - test  # or your preferred branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10.12'  # Specify your Python version

    # - name: Install Dependencies
    #   run: |
    #     pip install -r requirements.txt

    - name: Test
      run: |
        # Add commands to run your tests

    - name: Deploy to AWS EC2
      env:
        SSH_PRIVATE_KEY: ${{ secrets.EC2 }}
        HOST: ${{ secrets.HOST }}
        USER: ${{ secrets.USER }}
        TARGET: ${{ secrets.TARGET }}
        ZIP_NAME: 'deployment_package.zip'
      run: |
        # Zip the project files
        zip -r $ZIP_NAME .

        # Setup SSH key
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $HOST >> ~/.ssh/known_hosts
    
        # Copy files to EC2 instance
        scp -o StrictHostKeyChecking=no $ZIP_NAME $USER@$HOST:$TARGET
    
        # Execute commands on EC2 instance
        ssh -o StrictHostKeyChecking=no $USER@$HOST 'bash -s' <<'ENDSSH'
          cd $TARGET
          # Ensure unzip is installed
          # sudo apt-get update && sudo apt-get install -y unzip

          # Unzip the project files
          if [ -f 'deployment_package.zip' ]; then
              unzip 'deployment_package.zip' && rm 'deployment_package.zip' # Remove the zip file after extraction
          else
              echo "Zip file not found."
          fi

        #   # Activate virtual environment
        #   source vemysite/bin/activate
        #   # Run database migrations
        #   python3 manage.py migrate
        #   # Collect static files
        #   python3 manage.py collectstatic --noinput
        #   # Restart the web server (assuming you're using Gunicorn)
        #   # sudo systemctl restart gunicorn
        #   # Or, alternatively, run Django's development server (not recommended for production)
        #   python manage.py runserver # 0.0.0.0:8000
        
        
        ENDSSH

