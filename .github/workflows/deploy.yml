# Workflow to deploy code to AWS EC2 instance
name: Deploy to AWS EC2

on:
  push:
    branches:
<<<<<<< HEAD
      - SCB-181
=======
      - main
>>>>>>> refs/remotes/origin/SCB-181

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12.1'
    
    - name: Install SSH Client
      run: sudo apt-get install openssh-client

    - name: Deploy
      env:
        SSH_PRIVATE_KEY: ${{ secrets.EC2 }}
        HOST: ${{ secrets.HOST }}
        USER: ${{ secrets.USER }}
        TARGET: ${{ secrets.TARGET }}
        ZIP_NAME: 'deployment_package.zip'
      run: |
        # Zip the project files
        zip -r $ZIP_NAME . 

        # Setup SSH key
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $HOST >> ~/.ssh/known_hosts
    
        # Copy files to EC2 instance
        scp -o StrictHostKeyChecking=no $ZIP_NAME $USER@$HOST:$TARGET

        # # Execute commands on EC2 instance
        ssh -o StrictHostKeyChecking=no $USER@$HOST 'bash -s' <<'ENDSSH'

        # Ensure unzip is installed
        sudo apt-get update && sudo apt-get install -y unzip

        # Unzip the project files
        if [ -f deployment_package.zip ]; then
            unzip -o deployment_package.zip
        else
            echo "Zip file not found."
        fi

        ENDSSH

    - name: Build Docker Image
      env:
        SSH_PRIVATE_KEY: ${{ secrets.EC2 }}
        HOST: ${{ secrets.HOST }}
        USER: ${{ secrets.USER }}
        CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
        
        TYPE: ${{ secrets.TYPE }}
        PROJECT_ID: ${{ secrets.PROJECT_ID }}
        PRIVATE_KEY_ID: ${{ secrets.PRIVATE_KEY_ID }}
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        CLIENT_EMAIL: ${{ secrets.CLIENT_EMAIL }}
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        AUTH_URI: ${{ secrets.AUTH_URI }}
        TOKEN_URI: ${{ secrets.TOKEN_URI }}
        AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.AUTH_PROVIDER_X509_CERT_URL }}
        CLIENT_X509_CERT_URL: ${{ secrets.CLIENT_X509_CERT_URL }}
        UNIVERSE_DOMAIN: ${{ secrets.UNIVERSE_DOMAIN }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}

      run: |
        ssh -o StrictHostKeyChecking=no $USER@$HOST 'bash -s' <<'ENDSSH'

        # Activate virtual environment
        source ./myenv/bin/activate
        pip install -r requirements.txt

        # go to folder
        cd mysite

        # start server, nohup makes sure the server stays running
        python3 manage.py runserver 0.0.0.0:8000 > /dev/null 2>&1 &

        ENDSSH

  test-connection:
    runs-on: ubuntu-latest
    needs: build-and-deploy

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10.12'  # Specify your Python version
    - name: http request
      run: |
        # use curl to sent http request to EC2
        response=$(curl --silent --head --fail 'http://35.160.162.164:8000/network')

        # Check the exit status of the curl command
        if [ $? -eq 0 ]; then
            echo "Website is reachable."
        else
            echo "Website is not reachable."
        fi